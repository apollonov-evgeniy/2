# -*- coding: utf-8 -*-
"""homework_5_apollonov.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pwCk5hmStagAhm5FNn7X2qUeBMSumXqg?usp=sharing
## Домашнее задание  5 
https://pythontutor.ru    
Необходимо решить задачи из следующих разделов.  

Решения необходимо сохранить в едином файле и сдать.

### Занятие 1. Ввод и вывод данных   
Задачи: 2, 3, 4, 6
"""

"""2 
Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике
# и выводит его площадь. Каждое число записано в отдельной строке.
"""

b = int(input('b --'))
h = int(input('h--'))
sq = b * h / 2
print('sq ', sq)

""" 3 
n школьников делят k яблок поровну, неделящийся остаток остается в корзинке. 
Сколько яблок достанется каждому школьнику? Сколько яблок останется в корзинке? 
Программа получает на вход числа n и k  должна вывести искомое количество яблок (два числа).
"""
n = int(input())
k = int(input())

print(k // n)
print(k % n)

""" 4 
Дано число n. С начала суток прошло n минут. 
Определите, сколько часов и минут будут показывать электронные часы в этот момент.
 Программа должна вывести два числа: количество часов (от 0 до 23) и количество минут (от 0 до 59). 
 Учтите, что число n может быть больше, чем количество минут в сутках.
 """
n = int(input())
hours = n % (60*24) // 60
minutes = n % 60
print(hours, minutes)

""" 
6 Напишите программу, которая считывает целое число и выводит текст, 
аналогичный приведенному в примере (пробелы важны!).
"""
k = int(input())
print('The next number for the number ' + str(k) + ' is ' + str(k+1) + '.')
print('The previous number for the number ' + str(k) + ' is ' + str(k-1) + '.')

"""### Занятие 2 . Условия
Задачи: 2, 3, 4, 6, 7, 12

"""

""" 2 
В математике функция sign(x) (знак числа) определена так:
sign(x) = 1, если x > 0,
sign(x) = -1, если x < 0,
sign(x) = 0, если x = 0.
Для данного числа x выведите значение sign(x). 
Эту задачу желательно решить с использованием каскадных инструкций if... elif... else
"""
x= int(input())
sign = 0
if x > 0:
  sign = 1
elif x < 0:
  sign = -1
print(sign)

""" 3 
Заданы две клетки шахматной доски. 
Если они покрашены в один цвет, то выведите слово YES, 
а если в разные цвета — то NO. 
Программа получает на вход четыре числа от 1 до 8 каждое, 
задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. 
"""
def color(column,line):
  return (column %2 == 0 and line % 2 != 0) \
      or (column % 2 != 0 and line % 2 == 0)

column_1 = int(input())
line_1 = int(input())
column_2 = int(input())
line_2 = int(input())
color_1 = color(column_1,line_1)
color_2 = color(column_2,line_2)     
if color_1 == color_2:
  print('YES')
else:
  print('NO')

""" 4 
Дано натуральное число. 
Требуется определить, является ли год с данным номером високосным. 
Если год является високосным, то выведите YES, иначе выведите NO. 
Напомним, что в соответствии с григорианским календарем, год является високосным, 
если его номер кратен 4, но не кратен 100, а также если он кратен 400.
"""

year = int(input())
if (year % 4 ==0 and not year % 100 ==0) or year %400 ==0:
  print('YES')
else:
  print('NO')

""" 6 
Даны три целых числа. Определите, сколько среди них совпадающих. 
Программа должна вывести одно из чисел: 3 (если все совпадают), 
2 (если два совпадает) или 0 (если все числа различны).
"""
x1 = int(input())
x2 = int(input())
x3 = int(input())
compare = 0
if x1==x2==x3:
  compare = 3
elif x1==x2 or x2==x3 or x1==x3:
  compare = 2
print(compare)

""" 7 
Шахматная ладья ходит по горизонтали или вертикали.
Даны две различные клетки шахматной доски, определите, 
может ли ладья попасть с первой клетки на вторую одним ходом.
Программа получает на вход четыре числа от 1 до 8 каждое,
задающие номер столбца и номер строки сначала для первой клетки, 
потом для второй клетки. Программа должна вывести YES, 
если из первой клетки ходом ладьи можно попасть во вторую или NO в противном случае.
"""
column_1 = int(input())
line_1 = int(input())
column_2 = int(input())
line_2 = int(input())
if column_1 == column_2 or line_1 == line_2:
  print('YES')
else:
  print('NO')

""" 12 
Шоколадка имеет вид прямоугольника, разделенного на n×m долек.
Шоколадку можно один раз разломить по прямой на две части. 
Определите, можно ли таким образом отломить от шоколадки часть, состоящую ровно из k долек. 
Программа получает на вход три числа: n, m, k и должна вывести YES или NO.
"""
n = int(input())
m = int(input())
k = int(input())
if k < n * m and ((k % n == 0) or (k % m == 0)):
    print('YES')
else:
    print('NO')

"""### Занятие 3. Вычисления  
Задачи: 1, 2, 3, 4, 5, 6
"""

""" 1  
Дано натуральное число. Выведите его последнюю цифру.
"""
x= int(input())
print(x%10)

""" 2 
Длина Московской кольцевой автомобильной дороги —109 километров.
Байкер Вася стартует с нулевого километра МКАД и едет со скоростью v километров в час.
На какой отметке он остановится через t часов?
Программа получает на вход значение v и t. 
Если v>0, то Вася движется в положительном направлении по МКАД, если же значение v<0, то в отрицательном.
Программа должна вывести целое число от 0 до 108 — номер отметки, на которой остановится Вася.
"""
v= int(input())
t= int(input())
s_road = 109
s = v * t % s_road
print(s)

""" 3
Дано положительное действительное число X. Выведите его дробную часть.
"""
x = float(input())
print(x - int(x))

""" 4 
Дано положительное действительное число X. Выведите его первую цифру после десятичной точки.
"""
x = float(input())
print((x - int(x))*10//1)

""" 5 
В некоторой школе занятия начинаются в 9:00. 
Продолжительность урока — 45 минут, 
после 1-го, 3-го, 5-го и т.д. уроков перемена 5 минут,
а после 2-го, 4-го, 6-го и т.д. — 15 минут.
Дан номер урока (число от 1 до 10). Определите, когда заканчивается указанный урок.
Выведите два целых числа: время окончания урока в часах и минутах.
"""
lesson = int(input())
time_lesson = 45
time_odd_br = 5
time_even_br = 15
#time_start = time_lesson * (lesson - 1) + time_odd_br * int(lesson / 2) + time_even_br * int((lesson-1)/2)
time_finish = time_lesson * (lesson) + time_odd_br * int(lesson / 2) + time_even_br * int((lesson-1)/2)
hours_finish = int(9+int(time_finish/60))
minuts_finish = int(time_finish%60)
print(hours_finish, minuts_finish)

""" 6  
За день машина проезжает n километров. 
Сколько дней нужно, чтобы проехать маршрут длиной m километров?
Программа получает на вход числа n и m.
"""
from math import *
n= int(input('n  '))
m= int(input('m  '))
print(ceil(m/n))

"""### Занятие 4. Цикл for  
Задачи: 2, 4, 5, 6, 7
"""

""" 2
Даны два целых числа A и В. Выведите все числа от A до B включительно, 
в порядке возрастания, если A < B, или в порядке убывания в противном случае.
"""
def sort_ab(x,y,sort):
  for i in range(x, y, sort):
    print(i)
a = int(input())
b = int(input())
if a < b:
  sort_ab(a, b+1, 1)
else:
  sort_ab(a, b-1, -1,)

""" 4
Дано 10 целых чисел. Вычислите их сумму. Напишите программу, использующую наименьшее число переменных.
"""
sum=0
for _ in range(10):
  sum += int(input())
print(sum)

""" 5
Дано несколько чисел. Вычислите их сумму. 
Сначала вводите количество чисел N, затем вводится ровно N целых чисел. 
Какое наименьшее число переменных нужно для решения этой задачи?
"""
sum=0
#n = int(input())
for _ in range(int(input())):
  sum += int(input())
print(sum)

""" 6
По данному натуральному n вычислите сумму 1^3+2^3+3^3+...+n^3.
"""
n = int(input())
sum_f = 0
for i in range(1, n+1):
  sum_f += i**3
print(sum_f)

""" 7
Факториалом числа n называется произведение 1 × 2 × ... × n. Обозначение: n!.
По данному натуральному n вычислите значение n!.
Пользоваться математической библиотекой math в этой задаче запрещено.
"""
n = int(input())
factorial = 1
for i in range(1, n+1):
  factorial *= i
print(factorial)

"""### Занятие 5. Строки  
Задачи: 2, 4, 5, 6, 7
"""

""" 2
Дана строка, состоящая из слов, разделенных пробелами. 
Определите, сколько в ней слов. Используйте для решения задачи метод count
"""
print(input().count(' ') + 1)

""" 4
Дана строка, состоящая ровно из двух слов, разделенных пробелом. 
Переставьте эти слова местами. Результат запишите в строку и выведите получившуюся строку.
При решении этой задачи не стоит пользоваться циклами и инструкцией if.
"""
str_1 = input()
word_1 = str_1[:str_1.find(' ')]
word_2 = str_1[str_1.find(' ') + 1:]
print(word_2 + ' ' + word_1)

""" 5
Дана строка. Если в этой строке буква f встречается только один раз, выведите её индекс. 
Если она встречается два и более раз, выведите индекс её первого и последнего появления. 
Если буква f в данной строке не встречается, ничего не выводите.
"""
str_1 = input()
if str_1.count('f') == 1:
    print(str_1.find('f'))
elif str_1.count('f') >= 2:
    print(str_1.find('f'), str_1.rfind('f'))

""" 6
Дана строка. Найдите в этой строке второе вхождение буквы f, 
и выведите индекс этого вхождения. 
Если буква f в данной строке встречается только один раз, выведите число -1, 
а если не встречается ни разу, выведите число -2.
"""
str_1 = input()
if str_1.count('f') == 1:
    print(-1)
elif str_1.count('f') < 1:
    print(-2)
else:
    print(str_1.find('f', str_1.find('f') + 1))

""" 7
Дана строка, в которой буква h встречается минимум два раза. 
Удалите из этой строки первое и последнее вхождение буквы h, 
а также все символы, находящиеся между ними.
"""
str_1 = input()
str_1 = str_1[:str_1.find('h')] + str_1[str_1.rfind('h') + 1:]
print(str_1)