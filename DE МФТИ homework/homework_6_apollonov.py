# -*- coding: utf-8 -*-
"""homework_6_apollonov.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DOYsfLczkJUqjSbDoK5qTZKYbQbMhd6Y

## ДЗ № 6. Задачи на Python 2. 

Необходимо решить задачи из следующих разделов на сайте https://pythontutor.ru/:


Решения сохранить в одном файле и сдать.

### Занятие 2. Условия

Задачи: 8, 9, 10, 13
"""

""" 8
Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку. 
Даны две различные клетки шахматной доски, 
определите, может ли король попасть с первой клетки на вторую одним ходом. 
Программа получает на вход четыре числа от 1 до 8 каждое, 
задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. 
Программа должна вывести YES, если из первой клетки ходом короля можно попасть во вторую или NO в противном случае.
"""
(x1, y1, x2, y2) = (int(input()) for _ in range(4))
out = 'YES' if x1 in {x2-1, x2, x2+1} and y1 in {y2-1, y2, y2+1} else 'NO' # без проверки на отрицательные значения в множестве и равенства 
# out = 'YES' if abs(x1 - x2) <= 1 and abs(y1 - y2) <= 1 else 'NO'
print(out)

""" 9
Шахматный слон ходит по диагонали. 
Даны две различные клетки шахматной доски,
определите, может ли слон попасть с первой клетки на вторую одним ходом.
"""
(x1, y1, x2, y2) = (int(input()) for _ in range(4))
out = 'YES' if abs(x1 - x2) == abs(y1 - y2)  else 'NO'
print(out)

""" 10
Шахматный ферзь ходит по диагонали, горизонтали или вертикали.
 Даны две различные клетки шахматной доски, 
 определите, может ли ферзь попасть с первой клетки на вторую одним ходом.
"""
(x1, y1, x2, y2) = (int(input()) for _ in range(4))
out = 'YES' if abs(x1 - x2) == abs(y1 - y2) or x1 == x2 or y1 == y2 else 'NO'
print(out)

""" 13
Яша плавал в бассейне размером N × M метров и устал. 
В этот момент он обнаружил, что находится на расстоянии x метров от одного из длинных бортиков 
(не обязательно от ближайшего) и y метров от одного из коротких бортиков. 
Какое минимальное расстояние должен проплыть Яша, чтобы выбраться из бассейна на бортик? 
Программа получает на вход числа N, M, x, y. 
Программа должна вывести число метров, которое нужно проплыть Яше до бортика
"""
(n, m, x, y) = (int(input()) for _ in range(4))
(n, m) = (m, n) if n > m else (n, m) # поиск длинной стороны
print(min((x, y, n-x, m-y)))

# l = sorted([x, y, n-x, m-y])
# print (l[0])

"""### Занятие 4. Цикл for

Задачи: 9, 11
"""

""" 9
Дано N чисел: сначала вводится число N, затем вводится ровно N целых чисел. 
Подсчитайте количество нулей среди введенных чисел и выведите это количество.
Вам нужно подсчитать количество чисел, равных нулю, а не количество цифр.
"""
n=0
for _ in range(int(input('N '))):
  n = n + 1 if int(input('число '))==0 else n   # n =+ 1 срабатывает неправильно в этой конструкции
print(n)

""" 11
Для настольной игры используются карточки с номерами от 1 до N. 
Одна карточка потерялась. Найдите ее, зная номера оставшихся карточек.
Дано число N, далее N − 1 номер оставшихся карточек (различные числа от 1 до N). 
Программа должна вывести номер потерянной карточки.

Для самых умных: массивами и аналогичными структурами данных пользоваться нельзя.
"""
s=0
for i in range(1, int(input('N '))+1):
  s = s + i - int(input('номер карточки ')) if i != 1 else 1
print(s)

"""### Занятие 6. Цикл while

Задачи: 2, 3, 7, 9
"""

""" 2
Дано целое число, не меньшее 2. 
Выведите его наименьший натуральный делитель, отличный от 1.
"""
n = int(input('n '))
i = 2
while n % i != 0:
  i += 1
print(i)

""" 3
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. 
Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""
n = int(input('n '))
k = 1
exp =2
while  exp <= n:
    k += 1
    exp *= 2
print(k-1, exp//2)

""" 7
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

sequence=[]
while True: # без проверки  деления на 0

    element = int(input('введите число или 0 для выхода: '))
    if element == 0:
      break
    else:
      sequence.append(element)  
print(sum(sequence) / len(sequence))

""" 9
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите индекс наибольшего элемента последовательности. 
Если наибольших элементов несколько, выведите индекс первого из них. 
Нумерация элементов начинается с нуля.
"""
i = 0
max = 0
max_i = 0
while True: 
    element = int(input('введите число или 0 для выхода: '))
    if element == 0:
      break
    else:
      (max, max_i) = (element, i) if max < element else (max, max_i)  
      i +=1
print(max_i)

